apiVersion: v1
kind: ConfigMap
metadata:
  name: cm-rp-businessentity-app
  namespace: ns-retailpulse
data:
  application.yaml: |
    server:
      port: 8083

    auth:
      enabled: false
      origin: "http://localhost:30080" #"http://localhost:4200"
      jwt:
        key:
          set:
            uri: http://app-iam:8081/oauth2/jwks

    spring:
      datasource:
        url: jdbc:mysql://mysql-rp-businessentity:3306/RPBusinessEntityDB
        username: root
        password: password
        driver-class-name: com.mysql.cj.jdbc.Driver

      jpa:
        hibernate:
          ddl-auto: update
        database-platform: org.hibernate.dialect.MySQL8Dialect
        show-sql: true

      cache:
        type: redis

      data:
        redis:
          host: redis-rp-businessentity
          port: 6379
          password: ${REDIS_PASSWORD}
          timeout: 60000

    logging:
      level:
        root: INFO
        org:
          springframework:
            security: TRACE
        com.retailpulse: DEBUG
      file:
        name: logs/rp-businessentity.log

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-rp-businessentity
  namespace: ns-retailpulse
  labels:
    app: deploy-rp-businessentity
spec:
  replicas: 1
  selector:
    matchLabels:
      app: deploy-rp-businessentity
  strategy: {}
  template:
    metadata:
      labels:
        app: deploy-rp-businessentity
    spec:
      initContainers:
        # Wait for MySQL Service to be reachable
        - name: wait-for-mysql
          image: busybox:1.35
          command:
            - sh
            - -c
            - >
              until nc -z mysql-rp-businessentity 3306; do
                echo "Waiting for MySQL at mysql-rp-businessentity:3306...";
                sleep 5;
              done;
              echo "MySQL is ready!";
          env:
            - name: MYSQL_HOST
              value: mysql-rp-businessentity
            - name: MYSQL_PORT
              value: "3306"

        # Wait for Redis Service to be reachable
        - name: wait-for-redis
          image: redis:7.2
          command:
            - sh
            - -c
            - >
              until redis-cli -h redis-rp-businessentity -p 6379 -a $$REDIS_PASSWORD ping; do
                echo "Waiting for Redis at redis-rp-businessentity:6379...";
                sleep 5;
              done;
              echo "Redis is ready!";
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secret-redis
                  key: REDIS_PASSWORD
            - name: REDIS_HOST
              value: redis-rp-businessentity
            - name: REDIS_PORT
              value: "6379"
      containers:
      - image: rp-businessentity-app:v0.1.0 #docker.io/casperyap/
        name: app-rp-businessentity
        imagePullPolicy: Never #Always
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: secret-redis
              key: REDIS_PASSWORD
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        resources: {}
      volumes:
      - name: config-volume
        configMap:
          name: cm-rp-businessentity-app

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: deploy-rp-businessentity
    namespace: ns-retailpulse
  name: svc-rp-businessentity
spec:
  selector:
    app: deploy-rp-businessentity
  ports:
  - port: 8083
    protocol: TCP
    targetPort: 8083
    nodePort: 30083 
  type: NodePort